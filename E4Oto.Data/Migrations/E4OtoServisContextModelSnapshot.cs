// <auto-generated />
using System;
using E4Oto.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace E4Oto.Data.Migrations
{
    [DbContext(typeof(E4OtoServisContext))]
    partial class E4OtoServisContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Turkish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("E4Oto.Data.Models.AramaDetaylari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AramaId")
                        .HasColumnType("int");

                    b.Property<bool?>("BaskaServis")
                        .HasColumnType("bit");

                    b.Property<bool?>("BaskaServisYetkiliMi")
                        .HasColumnType("bit");

                    b.Property<int?>("DosyaDurumu")
                        .HasColumnType("int");

                    b.Property<double?>("Fiyat")
                        .HasColumnType("float");

                    b.Property<bool?>("RandevuAlindi")
                        .HasColumnType("bit");

                    b.Property<string>("RandevuDanismani")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("RandevuNedeni")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RandevuTarihi")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("Sonuc")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TeklifHatirlatmaTarihi")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("TeklifiVerildi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AramaId");

                    b.HasIndex("DosyaDurumu");

                    b.HasIndex("Sonuc");

                    b.ToTable("AramaDetaylari");
                });

            modelBuilder.Entity("E4Oto.Data.Models.Aramalar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AracId")
                        .HasColumnType("int");

                    b.Property<int?>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int?>("OperatorId")
                        .HasColumnType("int");

                    b.Property<int?>("Saat")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.HasIndex("AracId");

                    b.HasIndex("MusteriId");

                    b.HasIndex("OperatorId");

                    b.ToTable("Aramalar");
                });

            modelBuilder.Entity("E4Oto.Data.Models.Danismanlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kodu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unvani")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Danismanlar");
                });

            modelBuilder.Entity("E4Oto.Data.Models.DosyaDurumlari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Kodu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tanimi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DosyaDurumlari");
                });

            modelBuilder.Entity("E4Oto.Data.Models.MusteriAraclari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AracTanimi")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("Km")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Marka")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MotorNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MusteriId")
                        .HasColumnType("int");

                    b.Property<string>("Plaka")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Renk")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SasiNo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Seri")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("SonServisTarihi")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrafigeCikis")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.ToTable("MusteriAraclari");
                });

            modelBuilder.Entity("E4Oto.Data.Models.Musteriler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adres1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Adres2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Adres3")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Il")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ilce")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MusteriNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unvani")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Musteriler");
                });

            modelBuilder.Entity("E4Oto.Data.Models.Operatorler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("IseGirisTarihi")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Kodu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unvani")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Operatorler");
                });

            modelBuilder.Entity("E4Oto.Data.Models.RandevuSebepleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Kodu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tanimi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RandevuSebepleri");
                });

            modelBuilder.Entity("E4Oto.Data.Models.Randevular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AracId")
                        .HasColumnType("int");

                    b.Property<int?>("AramaId")
                        .HasColumnType("int");

                    b.Property<int?>("BaslangicSaat")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BaslangicTarih")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("BitisSaat")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BitisTarih")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("CarsaIslendiMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("DanismanId")
                        .HasColumnType("int");

                    b.Property<int?>("MusteriId")
                        .HasColumnType("int");

                    b.Property<bool?>("SmsAldiMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.HasIndex("AracId");

                    b.HasIndex("AramaId");

                    b.HasIndex("DanismanId");

                    b.HasIndex("MusteriId");

                    b.ToTable("Randevular");
                });

            modelBuilder.Entity("E4Oto.Data.Models.Sonuclar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Kodu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tanimi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Sonuclar");
                });

            modelBuilder.Entity("E4Oto.Data.Models.ViewMain", b =>
                {
                    b.Property<string>("MusteriNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unvani")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.ToView("ViewMain");
                });

            modelBuilder.Entity("E4Oto.Data.Models.AramaDetaylari", b =>
                {
                    b.HasOne("E4Oto.Data.Models.Aramalar", "Arama")
                        .WithMany("AramaDetaylaris")
                        .HasForeignKey("AramaId")
                        .HasConstraintName("FK_AramaDetaylari_Aramalar")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("E4Oto.Data.Models.DosyaDurumlari", "DosyaDurumuNavigation")
                        .WithMany("AramaDetaylaris")
                        .HasForeignKey("DosyaDurumu")
                        .HasConstraintName("FK_AramaDetaylari_DosyaDurumlari");

                    b.HasOne("E4Oto.Data.Models.Sonuclar", "SonucNavigation")
                        .WithMany("AramaDetaylaris")
                        .HasForeignKey("Sonuc")
                        .HasConstraintName("FK_AramaDetaylari_Sonuclar");

                    b.Navigation("Arama");

                    b.Navigation("DosyaDurumuNavigation");

                    b.Navigation("SonucNavigation");
                });

            modelBuilder.Entity("E4Oto.Data.Models.Aramalar", b =>
                {
                    b.HasOne("E4Oto.Data.Models.MusteriAraclari", "Arac")
                        .WithMany("Aramalars")
                        .HasForeignKey("AracId")
                        .HasConstraintName("FK_Aramalar_MusteriAraclari");

                    b.HasOne("E4Oto.Data.Models.Musteriler", "Musteri")
                        .WithMany("Aramalars")
                        .HasForeignKey("MusteriId")
                        .HasConstraintName("FK_Aramalar_Musteriler");

                    b.HasOne("E4Oto.Data.Models.Operatorler", "Operator")
                        .WithMany("Aramalars")
                        .HasForeignKey("OperatorId")
                        .HasConstraintName("FK_Aramalar_Operatorler");

                    b.Navigation("Arac");

                    b.Navigation("Musteri");

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("E4Oto.Data.Models.MusteriAraclari", b =>
                {
                    b.HasOne("E4Oto.Data.Models.Musteriler", "Musteri")
                        .WithMany("MusteriAraclaris")
                        .HasForeignKey("MusteriId")
                        .HasConstraintName("FK_MusteriAraclari_Musteriler")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("E4Oto.Data.Models.Randevular", b =>
                {
                    b.HasOne("E4Oto.Data.Models.MusteriAraclari", "Arac")
                        .WithMany("Randevulars")
                        .HasForeignKey("AracId")
                        .HasConstraintName("FK_Randevular_MusteriAraclari");

                    b.HasOne("E4Oto.Data.Models.Aramalar", "Arama")
                        .WithMany("Randevulars")
                        .HasForeignKey("AramaId")
                        .HasConstraintName("FK_Randevular_Aramalar");

                    b.HasOne("E4Oto.Data.Models.Danismanlar", "Danisman")
                        .WithMany("Randevulars")
                        .HasForeignKey("DanismanId")
                        .HasConstraintName("FK_Randevular_Danismanlar");

                    b.HasOne("E4Oto.Data.Models.Musteriler", "Musteri")
                        .WithMany("Randevulars")
                        .HasForeignKey("MusteriId")
                        .HasConstraintName("FK_Randevular_Musteriler");

                    b.Navigation("Arac");

                    b.Navigation("Arama");

                    b.Navigation("Danisman");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("E4Oto.Data.Models.Aramalar", b =>
                {
                    b.Navigation("AramaDetaylaris");

                    b.Navigation("Randevulars");
                });

            modelBuilder.Entity("E4Oto.Data.Models.Danismanlar", b =>
                {
                    b.Navigation("Randevulars");
                });

            modelBuilder.Entity("E4Oto.Data.Models.DosyaDurumlari", b =>
                {
                    b.Navigation("AramaDetaylaris");
                });

            modelBuilder.Entity("E4Oto.Data.Models.MusteriAraclari", b =>
                {
                    b.Navigation("Aramalars");

                    b.Navigation("Randevulars");
                });

            modelBuilder.Entity("E4Oto.Data.Models.Musteriler", b =>
                {
                    b.Navigation("Aramalars");

                    b.Navigation("MusteriAraclaris");

                    b.Navigation("Randevulars");
                });

            modelBuilder.Entity("E4Oto.Data.Models.Operatorler", b =>
                {
                    b.Navigation("Aramalars");
                });

            modelBuilder.Entity("E4Oto.Data.Models.Sonuclar", b =>
                {
                    b.Navigation("AramaDetaylaris");
                });
#pragma warning restore 612, 618
        }
    }
}
